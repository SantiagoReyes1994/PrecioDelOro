[["index.html", "Precio Del Oro Capítulo 1 DATA SET SELECCIONADO 1.1 NOMBRE: Daily Gold Price (2014-2022) Time Series en Kaggle 1.2 DESCRIPCIÓN: 1.3 RANGO DE FECHAS:01/01/2014-05/08/2022 1.4 REGISTROS: 2.227 1.5 VARIABLES: 1.6 IMPORTANCIA:", " Precio Del Oro Grupo 2: Santiago Reyes, Francisco Santos, Fabian Maldonado 2024-04-29 Capítulo 1 DATA SET SELECCIONADO 1.1 NOMBRE: Daily Gold Price (2014-2022) Time Series en Kaggle 1.2 DESCRIPCIÓN: Conjunto de datos proporciona los precios diarios del oro desde 2015 hasta 2021. Cada entrada incluye la fecha y el precio del oro en dólares estadounidenses (USD). 1.3 RANGO DE FECHAS:01/01/2014-05/08/2022 1.4 REGISTROS: 2.227 1.5 VARIABLES: Este Dataset contiene las siguientes variables: • Fecha (Date): Representa la fecha en la que se registró el precio del oro. Por ejemplo, “24 de abril de 2015”. • Precio del oro (Price): Indica el valor del oro en dólares estadounidenses (USD) para esa fecha específica. Por ejemplo, “1,200 USD”. • Precio de apertura (Open): Corresponde al precio del oro al inicio del período de negociación. Por ejemplo, “1,180 USD”. • Precio máximo (High): Es el precio más alto alcanzado por el oro durante el día. Por ejemplo, “1,220 USD”. • Precio mínimo (Low): Representa el precio más bajo registrado para el oro durante el día. Por ejemplo, “1,150 USD”. • Volumen (Volume): Indica la cantidad total de oro negociada en ese día. Por ejemplo, “10,000 onzas”. • Variación porcentual (Chg%): Muestra el cambio porcentual en el precio del oro con respecto al día anterior. Por ejemplo, “+2.5%” o “-1.8%”. 1.6 IMPORTANCIA: 1.6.1 Relevancia económica: El oro ha sido una parte integral de la economía mundial durante milenios y sigue siendo relevante en la economía contemporánea por varias razones: El oro ha sido considerado tradicionalmente como una reserva de valor estable. A lo largo de la historia, ha conservado su valor mejor que muchas otras formas de inversión, lo que lo convierte en un refugio seguro en tiempos de incertidumbre económica, Los inversores y los bancos centrales a menudo mantienen oro como parte de una cartera diversificada. Dado que el oro tiene una correlación baja o negativa con otros activos. Además de su valor como inversión, el oro tiene numerosos usos industriales y tecnológicos. Se utiliza en la electrónica, la odontología, la medicina entre otros campos. 1.6.2 Análisis de tendencias: Estudiar la serie temporal de precios del oro permite identificar cambios en el sentimiento económico y la confianza del mercado. Por ejemplo, un aumento en el precio del oro a menudo indica preocupaciones sobre la inflación, la inestabilidad geopolítica o la incertidumbre económica, Para los inversionistas, el oro puede servir como una forma de diversificar sus carteras y mitigar el riesgo. Estudiar las fluctuaciones en su precio les permite ajustar sus asignaciones de activos según las condiciones del mercado. Históricamente ha demostrado ser un activo que puede actuar como cobertura contra la inflación. Los bancos, en particular, pueden estudiar las fluctuaciones en el precio del oro para informar sus decisiones de política monetaria y de inversión. Las reservas de oro de un banco central pueden influir en su política monetaria y en su capacidad para estabilizar la moneda nacional. Por último, : Los movimientos extremos en el precio del oro a menudo pueden indicar riesgos sistémicos en la economía o en los mercados financieros. 1.6.3 Modelos de predicción: Utilizando estos datos, se pueden construir modelos de predicción para estimar los precios futuros del oro y cambios importantes. Se pueden aplicar modelos como: • Modelos ARIMA (Autoregressive Integrated Moving Average): Son adecuados para series temporales estacionarias y pueden capturar tanto la autocorrelación como la estacionalidad en los datos. • Suavizado exponencial: Modelo es útil para suavizar las fluctuaciones en los datos y capturar tendencias a largo plazo. Es especialmente útil cuando los datos tienen una tendencia y/o estacionalidad que cambia con el tiempo. • Redes Neuronales Recurrentes (RNN) y Redes Neuronales Convolucionales (CNN): Estos modelos son capaces de capturar patrones complejos en los datos y pueden adaptarse a una amplia variedad de situaciones. • Modelos de regresión: Son útiles para analizar la relación entre la serie temporal de interés y otras variables predictoras. • Modelos de media móvil generalizada (GARCH): Son útiles para modelar la volatilidad en series temporales financieras. 1.6.4 Investigación académica: Los datos históricos del oro son útiles para investigaciones académicas en campos como la economía, las finanzas y la econometría. 1.6.5 Granularidad diaria: El tener información tan detallada del comportamiento diario es valioso para tener datos solidos y de gran confiabilidad. "],["propuesta-avance-2.html", "Capítulo 2 Propuesta Avance 2 2.1 Cargar Librerias a usar 2.2 Cargar la data del Data set 2.3 Limpieza de Datos 2.4 Padding &amp; imputation 2.5 Exploración de la data 2.6 Descomposición 2.7 Análisis de estacionalidad", " Capítulo 2 Propuesta Avance 2 2.1 Cargar Librerias a usar library(lubridate) library(forecast) library(MLmetrics) library(tseries) library(TSstudio) library(padr) library(imputeTS) library(ggplot2) library(tidyverse) theme_set(theme_minimal()) 2.2 Cargar la data del Data set data = read.csv(&quot;Gold Price.csv&quot;) head(data) ## Date Price Open High Low Volume Chg. ## 1 2014-01-01 29542 29435 29598 29340 2930 0.25 ## 2 2014-01-02 29975 29678 30050 29678 3140 1.47 ## 3 2014-01-03 29727 30031 30125 29539 3050 -0.83 ## 4 2014-01-04 29279 29279 29279 29279 0 -1.51 ## 5 2014-01-06 29119 29300 29395 29051 24380 -0.55 ## 6 2014-01-07 28959 29130 29195 28912 18710 -0.55 2.3 Limpieza de Datos # Validar los tipos de datos de cada Columna str(data) ## &#39;data.frame&#39;: 2227 obs. of 7 variables: ## $ Date : chr &quot;2014-01-01&quot; &quot;2014-01-02&quot; &quot;2014-01-03&quot; &quot;2014-01-04&quot; ... ## $ Price : int 29542 29975 29727 29279 29119 28959 28934 28997 29169 29312 ... ## $ Open : int 29435 29678 30031 29279 29300 29130 28916 28990 29030 29170 ... ## $ High : int 29598 30050 30125 29279 29395 29195 29029 29053 29198 29330 ... ## $ Low : int 29340 29678 29539 29279 29051 28912 28820 28865 28960 29133 ... ## $ Volume: int 2930 3140 3050 0 24380 18710 18140 15130 15810 13780 ... ## $ Chg. : num 0.25 1.47 -0.83 -1.51 -0.55 -0.55 -0.09 0.22 0.59 0.49 ... La columna “Date” está en tipo “character”, por lo tanto toca convertir esta en formato de Tiempo data &lt;- data %&gt;% mutate(Date = ymd(Date)) str(data) ## &#39;data.frame&#39;: 2227 obs. of 7 variables: ## $ Date : Date, format: &quot;2014-01-01&quot; &quot;2014-01-02&quot; &quot;2014-01-03&quot; &quot;2014-01-04&quot; ... ## $ Price : int 29542 29975 29727 29279 29119 28959 28934 28997 29169 29312 ... ## $ Open : int 29435 29678 30031 29279 29300 29130 28916 28990 29030 29170 ... ## $ High : int 29598 30050 30125 29279 29395 29195 29029 29053 29198 29330 ... ## $ Low : int 29340 29678 29539 29279 29051 28912 28820 28865 28960 29133 ... ## $ Volume: int 2930 3140 3050 0 24380 18710 18140 15130 15810 13780 ... ## $ Chg. : num 0.25 1.47 -0.83 -1.51 -0.55 -0.55 -0.09 0.22 0.59 0.49 ... Todas las columnas se encuentran en el tipo correcto. 2.4 Padding &amp; imputation Si observamos la data solo comprende fechas entre semana, pero en series de tiempo deberiamos tener la data mas completa en la medida de lo posible. #Padding data &lt;- data %&gt;% pad(interval = &quot;day&quot;) # imputar NA values con la ultima observacion data_clean &lt;- data %&gt;% na.locf() ## Warning in na.locf(.): na.locf will be replaced by na_locf. ## Functionality stays the same. ## The new function name better fits modern R code style guidelines. ## Please adjust your code accordingly. head(data_clean) ## Date Price Open High Low Volume Chg. ## 1 2014-01-01 29542 29435 29598 29340 2930 0.25 ## 2 2014-01-02 29975 29678 30050 29678 3140 1.47 ## 3 2014-01-03 29727 30031 30125 29539 3050 -0.83 ## 4 2014-01-04 29279 29279 29279 29279 0 -1.51 ## 5 2014-01-05 29279 29279 29279 29279 0 -1.51 ## 6 2014-01-06 29119 29300 29395 29051 24380 -0.55 2.5 Exploración de la data Para explorar la data debemos primero crear el objeto de serie de tiempo # ts data_ts &lt;- ts(data = data_clean$Price, start = 2014, frequency = 7*4*12) data_ts %&gt;% autoplot() Se observa un comportamiento incremental a traves del tiempo y adicionalmente se podria inferir un modelo multiplicativo 2.6 Descomposición Se realiza la descomposicion para validar la tendencia, estacionalidad. data_decompose &lt;- data_ts %&gt;% decompose(type = &quot;multiplicative&quot;) data_decompose %&gt;% autoplot() en efecto se evidencia una tendencia lineal y adicionalmente hay un patron de estacionalidad en la data 2.7 Análisis de estacionalidad data_decompose$seasonal %&gt;% autoplot() Se tratará de validar un patron mensual del precio de oro entre el 2014 y 2021 data_clean %&gt;% mutate(Month = month(Date, label = T)) %&gt;% mutate(seasons = data_decompose$seasonal) %&gt;% group_by(Month) %&gt;% summarise(total = sum(seasons)) %&gt;% ggplot(aes(Month, total)) + geom_col()+ theme_minimal() Los precios de oro tienden a ser mas altos entre enero a Julio, mierntas que agosto a diciembre el precio baja. "],["capítulo-3.html", "Capítulo 3 Capítulo 3", " Capítulo 3 Capítulo 3 "],["capítulo-4.html", "Capítulo 4 Capítulo 4", " Capítulo 4 Capítulo 4 "]]
